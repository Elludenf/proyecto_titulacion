<?php

/*
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */

class Matsorteadas_x_examan extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Matsorteadas_x_examan_model');
    }

    /*
     * Listing of matsorteadas_x_examen
     */
    private $limit = 5;

    function index()
    {
        if (isset($_SERVER['HTTP_REFERER'])) {

            $data['matsorteadas_x_examen'] = $this->Matsorteadas_x_examan_model->get_all_matsorteadas_x_examen();

            /*Empiezo de paginacion*/
            $total_rows = $this->Matsorteadas_x_examan_model->count();

            $this->load->library('pagination');
            $config['total_rows'] = $total_rows;
            $config['per_page'] = $this->limit;
            $config['uri_segment'] = 3;
            $config['base_url'] = base_url() . '/matsorteadas_x_examan/index';
            //CSS
            $config['full_tag_open'] = '<ul class="tsc_pagination tsc_paginationA tsc_paginationA01">';
            $config['full_tag_close'] = '</ul>';
            $config['prev_link'] = '&lt;';
            $config['prev_tag_open'] = '<li>';
            $config['prev_tag_close'] = '</li>';
            $config['next_link'] = '&gt;';
            $config['next_tag_open'] = '<li>';
            $config['next_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="current"><a href="#">';
            $config['cur_tag_close'] = '</a></li>';
            $config['num_tag_open'] = '<li>';
            $config['num_tag_close'] = '</li>';

            $config['first_tag_open'] = '<li>';
            $config['first_tag_close'] = '</li>';
            $config['last_tag_open'] = '<li>';
            $config['last_tag_close'] = '</li>';

            $config['first_link'] = '&lt;&lt;';
            $config['last_link'] = '&gt;&gt;';
            //Fin CSS
            $this->pagination->initialize($config);

            $page_links = $this->pagination->create_links();
            $data['links'] = explode('&nbsp;', $page_links);
            /*Fin de paginacion*/

            $this->load->helper('form');
            $this->load->helper(array('form'));
            $this->load->view('templates/header');
            $this->load->view('matsorteadas_x_examan/index', $data);
            $this->load->view('templates/footer');

        } else {


            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');

        }
    }
    function buscarMatXEx()
    {

        if (isset($_SERVER['HTTP_REFERER'])) {
            $data['matsorteadas_x_examen'] = $this->Matsorteadas_x_examan_model->getMatXExBusqueda($this->input->post('search'));

            /*Empiezo de paginacion*/
            $total_rows = $this->Matsorteadas_x_examan_model->countParamSearch($this->input->post('search'));

            $this->load->library('pagination');
            //   $config['total_rows'] = $total_rows;
            $config['per_page'] = 5;
            $config['uri_segment'] = 3;
            $config['base_url'] = base_url() . '/matsorteadas_x_examen/buscarMatXEx';


            //CSS
            $config['full_tag_open'] = '<ul class="tsc_pagination tsc_paginationA tsc_paginationA01">';
            $config['full_tag_close'] = '</ul>';
            $config['prev_link'] = '&lt;';
            $config['prev_tag_open'] = '<li>';
            $config['prev_tag_close'] = '</li>';
            $config['next_link'] = '&gt;';
            $config['next_tag_open'] = '<li>';
            $config['next_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="current"><a href="#">';
            $config['cur_tag_close'] = '</a></li>';
            $config['num_tag_open'] = '<li>';
            $config['num_tag_close'] = '</li>';

            $config['first_tag_open'] = '<li>';
            $config['first_tag_close'] = '</li>';
            $config['last_tag_open'] = '<li>';
            $config['last_tag_close'] = '</li>';

            $config['first_link'] = '&lt;&lt;';
            $config['last_link'] = '&gt;&gt;';
            //Fin CSS
            $this->pagination->initialize($config);

            $page_links = $this->pagination->create_links();
            $data['links'] = explode('&nbsp;', $page_links);
            /*Fin de paginacion*/


            $this->load->helper('form');
            $this->load->helper(array('form'));
            $this->load->view('templates/header');
            $this->load->view('matsorteadas_x_examan/index', $data);
            $this->load->view('templates/footer');
        } else {


            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');

        }
    }
    /*
     * Adding a new matsorteadas_x_examan
     */
    function add()
    {
        if (isset($_SERVER['HTTP_REFERER'])) {

            $this->load->library('form_validation');

            $this->form_validation->set_rules('mxe_nota_horal_1', 'Nota Oral 1', 'numeric');
            $this->form_validation->set_rules('mxe_nota_escrita_1', 'Nota Escrita 1', 'numeric');
            $this->form_validation->set_rules('mxe_nota_horal_2', 'Nota Oral 2', 'numeric');
            $this->form_validation->set_rules('mxe_nota_escrita_2', 'Nota Escrita 2', 'numeric');

            if ($this->form_validation->run()) {
                $params = array(
                    'mat_codigo' => $this->input->post('mat_codigo'),
                    'exa_codigo' => $this->input->post('exa_codigo'),
                    'mxe_fecha_1' => $this->input->post('mxe_fecha_1'),
                    'mxe_fecha_2' => $this->input->post('mxe_fecha_2'),
                    'mxe_nota_horal_1' => $this->input->post('mxe_nota_horal_1'),
                    'mxe_nota_escrita_1' => $this->input->post('mxe_nota_escrita_1'),
                    'mxe_nota_horal_2' => $this->input->post('mxe_nota_horal_2'),
                    'mxe_nota_escrita_2' => $this->input->post('mxe_nota_escrita_2'),
                );

                $matsorteadas_x_examan_id = $this->Matsorteadas_x_examan_model->add_matsorteadas_x_examan($params);
                redirect('matsorteadas_x_examan/index');
            } else {
                $this->load->model('Materia_model');
                $data['all_materias'] = $this->Materia_model->get_all_materias_();
                $this->load->model('Examen_complexivo_model');
                $data['all_examenes'] = $this->Examen_complexivo_model->get_all_examenes_complexivo_();


                $this->load->view('templates/header');
                $this->load->view('matsorteadas_x_examan/add', $data);
                $this->load->view('templates/footer');
            }

        } else {


            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');

        }
    }

    /*
     * Editing a matsorteadas_x_examan
     */
    function edit($mat_codigo, $exa_codigo)
    {
        if (isset($_SERVER['HTTP_REFERER'])) {

            // check if the matsorteadas_x_examan exists before trying to edit it
            $matsorteadas_x_examan = $this->Matsorteadas_x_examan_model->get_matsorteadas_x_examan($mat_codigo, $exa_codigo);

            if (isset($matsorteadas_x_examan['mat_codigo']) && isset($matsorteadas_x_examan['exa_codigo'])) {
                $this->load->library('form_validation');

                $this->form_validation->set_rules('mxe_nota_horal_1', 'Nota Oral 1', 'numeric');
                $this->form_validation->set_rules('mxe_nota_escrita_1', 'Nota Escrita 1', 'numeric');
                $this->form_validation->set_rules('mxe_nota_horal_2', 'Nota Oral 2', 'numeric');
                $this->form_validation->set_rules('mxe_nota_escrita_2', 'Nota Escrita 2', 'numeric');


                if ($this->form_validation->run()) {
                    $params = array(
                        'mxe_fecha_1' => $this->input->post('mxe_fecha_1'),
                        'mxe_fecha_2' => $this->input->post('mxe_fecha_2'),
                        'mxe_nota_horal_1' => $this->input->post('mxe_nota_horal_1'),
                        'mxe_nota_escrita_1' => $this->input->post('mxe_nota_escrita_1'),
                        'mxe_nota_horal_2' => $this->input->post('mxe_nota_horal_2'),
                        'mxe_nota_escrita_2' => $this->input->post('mxe_nota_escrita_2'),
                    );

                    $this->Matsorteadas_x_examan_model->update_matsorteadas_x_examan($mat_codigo, $exa_codigo, $params);
                    redirect('matsorteadas_x_examan/index');
                } else {
                    $data['matsorteadas_x_examan'] = $this->Matsorteadas_x_examan_model->get_matsorteadas_x_examan($mat_codigo);

                    $this->load->model('Materia_model');
                    $data['materia'] = $this->Materia_model->get_materia($mat_codigo);

                    $this->load->model('Examen_complexivo_model');
                    $data['all_examenes'] = $this->Examen_complexivo_model->get_all_examenes_complexivo_();


                    $this->load->view('templates/header');
                    $this->load->view('matsorteadas_x_examan/edit', $data);
                    $this->load->view('templates/footer');
                }
            } else
                show_error('The matsorteadas_x_examan you are trying to edit does not exist.');

        } else {


            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');

        }
    }

    /*
     * Deleting matsorteadas_x_examan
     */
    function remove($mat_codigo, $exa_codigo)
    {
        if (isset($_SERVER['HTTP_REFERER'])) {

            $matsorteadas_x_examan = $this->Matsorteadas_x_examan_model->get_matsorteadas_x_examan($mat_codigo, $exa_codigo);

            // check if the matsorteadas_x_examan exists before trying to delete it
            if (isset($matsorteadas_x_examan['mat_codigo']) && isset($matsorteadas_x_examan['exa_codigo'])) {
                $this->Matsorteadas_x_examan_model->delete_matsorteadas_x_examan($mat_codigo, $exa_codigo);
                redirect('matsorteadas_x_examan/index');
            } else
                show_error('The matsorteadas_x_examan you are trying to delete does not exist.');

        } else {


            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');

        }
    }

}
