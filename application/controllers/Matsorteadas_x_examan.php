<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Matsorteadas_x_examan extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Matsorteadas_x_examan_model');
    } 

    /*
     * Listing of matsorteadas_x_examen
     */
    function index()
    {
        $data['matsorteadas_x_examen'] = $this->Matsorteadas_x_examan_model->get_all_matsorteadas_x_examen();

        $this->load->view('matsorteadas_x_examan/index',$data);
    }

    /*
     * Adding a new matsorteadas_x_examan
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('mxe_nota_horal_1','Mxe Nota Horal 1','numeric');
		$this->form_validation->set_rules('mxe_nota_escrita_1','Mxe Nota Escrita 1','numeric');
		$this->form_validation->set_rules('mxe_nota_horal_2','Mxe Nota Horal 2','numeric');
		$this->form_validation->set_rules('mxe_nota_escrita_2','Mxe Nota Escrita 2','numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
                'mat_codigo'=>$this->input->post('mat_codigo'),
                'exa_codigo'=>$this->input->post('exa_codigo'),
				'mxe_fecha_1' => $this->input->post('mxe_fecha_1'),
				'mxe_fecha_2' => $this->input->post('mxe_fecha_2'),
				'mxe_nota_horal_1' => $this->input->post('mxe_nota_horal_1'),
				'mxe_nota_escrita_1' => $this->input->post('mxe_nota_escrita_1'),
				'mxe_nota_horal_2' => $this->input->post('mxe_nota_horal_2'),
				'mxe_nota_escrita_2' => $this->input->post('mxe_nota_escrita_2'),
            );
            
            $matsorteadas_x_examan_id = $this->Matsorteadas_x_examan_model->add_matsorteadas_x_examan($params);
            redirect('matsorteadas_x_examan/index');
        }
        else
        {
            $this->load->model('Materia_model');
            $data['all_materias'] = $this->Materia_model->get_all_materias();
            $this->load->model('Examen_complexivo_model');
            $data['all_examenes'] = $this->Examen_complexivo_model->get_all_examenes_complexivo();

            $this->load->view('matsorteadas_x_examan/add',$data);
        }
    }  

    /*
     * Editing a matsorteadas_x_examan
     */
    function edit($mat_codigo,$exa_codigo)
    {   
        // check if the matsorteadas_x_examan exists before trying to edit it
        $matsorteadas_x_examan = $this->Matsorteadas_x_examan_model->get_matsorteadas_x_examan($mat_codigo,$exa_codigo);
        
        if(isset($matsorteadas_x_examan['mat_codigo'])&&isset($matsorteadas_x_examan['exa_codigo']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('mxe_nota_horal_1','Mxe Nota Horal 1','numeric');
			$this->form_validation->set_rules('mxe_nota_escrita_1','Mxe Nota Escrita 1','numeric');
			$this->form_validation->set_rules('mxe_nota_horal_2','Mxe Nota Horal 2','numeric');
			$this->form_validation->set_rules('mxe_nota_escrita_2','Mxe Nota Escrita 2','numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'mxe_fecha_1' => $this->input->post('mxe_fecha_1'),
					'mxe_fecha_2' => $this->input->post('mxe_fecha_2'),
					'mxe_nota_horal_1' => $this->input->post('mxe_nota_horal_1'),
					'mxe_nota_escrita_1' => $this->input->post('mxe_nota_escrita_1'),
					'mxe_nota_horal_2' => $this->input->post('mxe_nota_horal_2'),
					'mxe_nota_escrita_2' => $this->input->post('mxe_nota_escrita_2'),
                );

                $this->Matsorteadas_x_examan_model->update_matsorteadas_x_examan($mat_codigo,$exa_codigo,$params);
                redirect('matsorteadas_x_examan/index');
            }
            else
            {   
                $data['matsorteadas_x_examan'] = $this->Matsorteadas_x_examan_model->get_matsorteadas_x_examan($mat_codigo);

                $this->load->model('Materia_model');
                $data['materia'] = $this->Materia_model->get_materia($mat_codigo);

                $this->load->model('Examen_complexivo_model');
                $data['all_examenes'] = $this->Examen_complexivo_model->get_all_examenes_complexivo();

                $this->load->view('matsorteadas_x_examan/edit',$data);
            }
        }
        else
            show_error('The matsorteadas_x_examan you are trying to edit does not exist.');
    } 

    /*
     * Deleting matsorteadas_x_examan
     */
    function remove($mat_codigo)
    {
        $matsorteadas_x_examan = $this->Matsorteadas_x_examan_model->get_matsorteadas_x_examan($mat_codigo,$exa_codigo);

        // check if the matsorteadas_x_examan exists before trying to delete it
        if(isset($matsorteadas_x_examan['mat_codigo'])&&isset($matsorteadas_x_examan['exa_codigo']))
        {
            $this->Matsorteadas_x_examan_model->delete_matsorteadas_x_examan($mat_codigo,$exa_codigo);
            redirect('matsorteadas_x_examan/index');
        }
        else
            show_error('The matsorteadas_x_examan you are trying to delete does not exist.');
    }
    
}
