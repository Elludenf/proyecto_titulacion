<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Prorroga extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Prorroga_model');
    } 

    /*
     * Listing of prorrogas
     */
    function index()
    {
        $data['prorrogas'] = $this->Prorroga_model->get_all_prorrogas();

        $this->load->view('prorrogas/index',$data);
    }

    /*
     * Adding a new prorroga
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('dis_codigo','Dis Codigo','required|integer');
		$this->form_validation->set_rules('pro_fechaint','Pro Fechaint','required');
		$this->form_validation->set_rules('pro_fechainicio','Pro Fechainicio','required');
		$this->form_validation->set_rules('pro_fechafin','Pro Fechafin','required');
		$this->form_validation->set_rules('pro_descripcion','Pro Descripcion','required|max_length[30]');
		$this->form_validation->set_rules('pro_detalle','Pro Detalle','required|max_length[1024]');
		
		if($this->form_validation->run())     
        {
            $this->db->select_max('pro_codigo');
            $result= $this->db->get('prorroga')->row_array();
            $params = array(
                'pro_codigo' =>$result['pro_codigo']+1,
				'dis_codigo' => $this->input->post('dis_codigo'),
				'pro_fechaint' => $this->input->post('pro_fechaint'),
				'pro_fechainicio' => $this->input->post('pro_fechainicio'),
				'pro_fechafin' => $this->input->post('pro_fechafin'),
				'pro_descripcion' => $this->input->post('pro_descripcion'),
				'pro_detalle' => $this->input->post('pro_detalle'),
            );
            
            $prorroga_id = $this->Prorroga_model->add_prorroga($params);
            redirect('prorroga/index');
        }
        else
        {

			$this->load->model('Trabajo_disertacion_model');
			$data['all_trabajos_disertacion'] = $this->Trabajo_disertacion_model->get_all_trabajos_disertacion();
                
            $this->load->view('prorrogas/add',$data);
        }
    }  

    /*
     * Editing a prorroga
     */
    function edit($pro_codigo)
    {   
        // check if the prorroga exists before trying to edit it
        $prorroga = $this->Prorroga_model->get_prorroga($pro_codigo);
        
        if(isset($prorroga['pro_codigo']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('dis_codigo','Dis Codigo','required|integer');
			$this->form_validation->set_rules('pro_fechaint','Pro Fechaint','required');
			$this->form_validation->set_rules('pro_fechainicio','Pro Fechainicio','required');
			$this->form_validation->set_rules('pro_fechafin','Pro Fechafin','required');
			$this->form_validation->set_rules('pro_descripcion','Pro Descripcion','required|max_length[30]');
			$this->form_validation->set_rules('pro_detalle','Pro Detalle','required|max_length[1024]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'dis_codigo' => $this->input->post('dis_codigo'),
					'pro_fechaint' => $this->input->post('pro_fechaint'),
					'pro_fechainicio' => $this->input->post('pro_fechainicio'),
					'pro_fechafin' => $this->input->post('pro_fechafin'),
					'pro_descripcion' => $this->input->post('pro_descripcion'),
					'pro_detalle' => $this->input->post('pro_detalle'),
                );

                $this->Prorroga_model->update_prorroga($pro_codigo,$params);            
                redirect('prorroga/index');
            }
            else
            {   
                $data['prorroga'] = $this->Prorroga_model->get_prorroga($pro_codigo);
    
				$this->load->model('Trabajo_disertacion_model');
				$data['all_trabajos_disertacion'] = $this->Trabajo_disertacion_model->get_all_trabajos_disertacion();

                $this->load->view('prorrogas/edit',$data);
            }
        }
        else
            show_error('The prorroga you are trying to edit does not exist.');
    } 

    /*
     * Deleting prorroga
     */
    function remove($pro_codigo)
    {
        $prorroga = $this->Prorroga_model->get_prorroga($pro_codigo);

        // check if the prorroga exists before trying to delete it
        if(isset($prorroga['pro_codigo']))
        {
            $this->Prorroga_model->delete_prorroga($pro_codigo);
            redirect('prorroga/index');
        }
        else
            show_error('The prorroga you are trying to delete does not exist.');
    }
    
}
