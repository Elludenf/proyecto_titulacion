<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Calendario extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Calendario_model');
    } 

    /*
     * Listing of calendarios
     */
    function index()
    {
        $data['calendarios'] = $this->Calendario_model->get_all_calendarios();

        $this->load->view('calendario/index',$data);
    }

    /*
     * Adding a new calendario
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('pac_codigo','Pac Codigo','integer');
		$this->form_validation->set_rules('calfecha','Calfecha','required');
		$this->form_validation->set_rules('caldiasemana','Caldiasemana','required');
		$this->form_validation->set_rules('callaborablesn','Callaborablesn','required');
		
		if($this->form_validation->run())     
        {
            //Agregado
            $this->db->select_max('calcodigo');
            $result= $this->db->get('calendarios')->row_array();
            //echo $result['per_codigo'];
            //
            $params = array(
                'calcodigo' =>$result['calcodigo']+1,
				'pac_codigo' => $this->input->post('pac_codigo'),
				'calfecha' => $this->input->post('calfecha'),
				'caldiasemana' => $this->input->post('caldiasemana'),
				'callaborablesn' => $this->input->post('callaborablesn'),
            );
            
            $calendario_id = $this->Calendario_model->add_calendario($params);
            redirect('calendario/index');
        }
        else
        {

			$this->load->model('Periodos_academicos_model');
			$data['all_periodos_academicos'] = $this->Periodos_academicos_model->get_all_periodos_academicos();
                
            $this->load->view('calendario/add',$data);
        }
    }  

    /*
     * Editing a calendario
     */
    function edit($calcodigo)
    {   
        // check if the calendario exists before trying to edit it
        $calendario = $this->Calendario_model->get_calendario($calcodigo);
        
        if(isset($calendario['calcodigo']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('pac_codigo','Pac Codigo','integer');
			$this->form_validation->set_rules('calfecha','Calfecha','required');
			$this->form_validation->set_rules('caldiasemana','Caldiasemana','required');
			$this->form_validation->set_rules('callaborablesn','Callaborablesn','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'pac_codigo' => $this->input->post('pac_codigo'),
					'calfecha' => $this->input->post('calfecha'),
					'caldiasemana' => $this->input->post('caldiasemana'),
					'callaborablesn' => $this->input->post('callaborablesn'),
                );

                $this->Calendario_model->update_calendario($calcodigo,$params);            
                redirect('calendario/index');
            }
            else
            {   
                $data['calendario'] = $this->Calendario_model->get_calendario($calcodigo);
    
				$this->load->model('Periodos_academicos_model');
				$data['all_periodos_academicos'] = $this->Periodos_academicos_model->get_all_periodos_academicos();

                $this->load->view('calendario/edit',$data);
            }
        }
        else
            show_error('The calendario you are trying to edit does not exist.');
    } 

    /*
     * Deleting calendario
     */
    function remove($calcodigo)
    {
        $calendario = $this->Calendario_model->get_calendario($calcodigo);

        // check if the calendario exists before trying to delete it
        if(isset($calendario['calcodigo']))
        {
            $this->Calendario_model->delete_calendario($calcodigo);
            redirect('calendario/index');
        }
        else
            show_error('The calendario you are trying to delete does not exist.');
    }
    
}
