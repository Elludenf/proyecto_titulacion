<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Elabora extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Elabora_model');
    } 

    /*
     * Listing of elabora
     */
    private $limit = 5;
    function index()
    {
        $data['elabora'] = $this->Elabora_model->get_all_elabora();

        /*Empiezo de paginacion*/
        $total_rows = $this->Elabora_model->count();

        $this->load->library('pagination');
        $config['total_rows'] = $total_rows;
        $config['per_page'] = $this->limit;
        $config['uri_segment'] = 3;
        $config['base_url'] = base_url().'/elabora/index';
        $this->pagination->initialize($config);

        $page_links = $this->pagination->create_links();
        $data['links'] = explode('&nbsp;',$page_links );
        /*Fin de paginacion*/

        $this->load->helper('form');
        $this->load->helper(array('form'));
        $this->load->view('templates/header');
        $this->load->view('elabora/index', $data);
        $this->load->view('templates/footer');
    }

    /*
     * Adding a new elabora
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('elb_nota_horal','Elb Nota Horal','numeric');
		$this->form_validation->set_rules('elb_nota_escrito','Elb Nota Escrito','numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
                'est_codigo'=>$this->input->post('est_codigo'),
                'dis_codigo'=>$this->input->post('dis_codigo'),
				'elb_nota_horal' => $this->input->post('elb_nota_horal'),
				'elb_nota_escrito' => $this->input->post('elb_nota_escrito'),
            );
            
            $elabora_id = $this->Elabora_model->add_elabora($params);
            redirect('elabora/index');
        }
        else
        {
            $this->load->model('Estudiante_model');
            $data['all_estudiantes'] = $this->Estudiante_model->get_all_estudiantes_no_elabora_ni_toma();
            $this->load->model('Trabajo_disertacion_model');
            $data['all_trabajos'] = $this->Trabajo_disertacion_model->get_all_trabajo_disertacion_();

            $this->load->view('templates/header');
            $this->load->view('elabora/add', $data);
            $this->load->view('templates/footer');
        }
    }  

    /*
     * Editing a elabora
     */
    function edit($est_codigo,$dis_codigo)
    {   
        // check if the elabora exists before trying to edit it
        $elabora = $this->Elabora_model->get_elabora($est_codigo,$dis_codigo);
        
        if(isset($elabora['est_codigo'])&&isset($elabora['dis_codigo']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('elb_nota_horal','Elb Nota Horal','numeric');
			$this->form_validation->set_rules('elb_nota_escrito','Elb Nota Escrito','numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'elb_nota_horal' => $this->input->post('elb_nota_horal'),
					'elb_nota_escrito' => $this->input->post('elb_nota_escrito'),
                );

                $this->Elabora_model->update_elabora($est_codigo,$dis_codigo,$params);



                redirect('elabora/index');
            }
            else
            {   
                $data['elabora'] = $this->Elabora_model->get_elabora($est_codigo,$dis_codigo);

                $this->load->model('Estudiante_model');
                $data['estudiante'] = $this->Estudiante_model->get_estudiante($est_codigo);
                $this->load->model('Trabajo_disertacion_model');
                $data['all_trabajos'] = $this->Trabajo_disertacion_model->get_all_trabajo_disertacion_();

                $this->load->view('templates/header');
                $this->load->view('elabora/edit', $data);
                $this->load->view('templates/footer');
            }
        }
        else
            show_error('The elabora you are trying to edit does not exist.');
    } 

    /*
     * Deleting elabora
     */
    function remove($est_codigo,$dis_codigo)
    {
        $elabora = $this->Elabora_model->get_elabora($est_codigo,$dis_codigo);

        // check if the elabora exists before trying to delete it
        if(isset($elabora['est_codigo'])&&isset($elabora['dis_codigo']))
        {
            $this->Elabora_model->delete_elabora($est_codigo,$dis_codigo);
            redirect('elabora/index');
        }
        else
            show_error('The elabora you are trying to delete does not exist.');
    }
    
}
