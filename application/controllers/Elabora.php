<?php

/*
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */

class Elabora extends CI_Controller
{
    private $limit = 5;

    /*
     * Listing of elabora
     */

    function __construct()
    {
        parent::__construct();
        $this->load->model('Elabora_model');
    }

    function index()
    {
        if (isset($_SERVER['HTTP_REFERER'])) {
            $data['elabora'] = $this->Elabora_model->get_all_elabora();

            /*Empiezo de paginacion*/
            $total_rows = $this->Elabora_model->count();

            $this->load->library('pagination');
            $config['total_rows'] = $total_rows;
            $config['per_page'] = $this->limit;
            $config['uri_segment'] = 3;
            $config['base_url'] = base_url() . '/elabora/index';
            //CSS
            $config['full_tag_open'] = '<ul class="tsc_pagination tsc_paginationA tsc_paginationA01">';
            $config['full_tag_close'] = '</ul>';
            $config['prev_link'] = '&lt;';
            $config['prev_tag_open'] = '<li>';
            $config['prev_tag_close'] = '</li>';
            $config['next_link'] = '&gt;';
            $config['next_tag_open'] = '<li>';
            $config['next_tag_close'] = '</li>';
            $config['cur_tag_open'] = '<li class="current"><a href="#">';
            $config['cur_tag_close'] = '</a></li>';
            $config['num_tag_open'] = '<li>';
            $config['num_tag_close'] = '</li>';

            $config['first_tag_open'] = '<li>';
            $config['first_tag_close'] = '</li>';
            $config['last_tag_open'] = '<li>';
            $config['last_tag_close'] = '</li>';

            $config['first_link'] = '&lt;&lt;';
            $config['last_link'] = '&gt;&gt;';
            //Fin CSS
            $this->pagination->initialize($config);

            $page_links = $this->pagination->create_links();
            $data['links'] = explode('&nbsp;', $page_links);
            /*Fin de paginacion*/

            $this->load->helper('form');
            $this->load->helper(array('form'));
            $this->load->view('templates/header');
            $this->load->view('elabora/index', $data);
            $this->load->view('templates/footer');
        } else {
            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');
        }
    }

    /*
     * Adding a new elabora
     */
    function add()
    {
        if (isset($_SERVER['HTTP_REFERER'])) {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('elb_nota_horal', 'Elb Nota Horal|greater_than_equal_to[0]', 'numeric|greater_than_equal_to[0]');
            $this->form_validation->set_rules('elb_nota_escrito', 'Elb Nota Escrito|greater_than_equal_to[0]', 'numeric|greater_than_equal_to[0]');
            if (empty($this->input->post('elb_nota_horal'))) {$nota_oral = NULL;} else {$nota_oral =$this->input->post('elb_nota_horal');}
            if (empty($this->input->post('elb_nota_escrito'))) {$nota_escrita = NULL;} else {$nota_escrita=$this->input->post('elb_escrito');}

            if ($this->form_validation->run()) {
                $params = array(
                    'est_codigo' => $this->input->post('est_codigo'),
                    'dis_codigo' => $this->input->post('dis_codigo'),
                    'elb_nota_horal' => $nota_oral,
                    'elb_nota_escrito' => $nota_escrita,
                );

                $elabora_id = $this->Elabora_model->add_elabora($params);
                redirect('elabora/index');
            } else {
                $this->load->model('Estudiante_model');
                $data['all_estudiantes'] = $this->Estudiante_model->get_all_estudiantes_no_elabora_ni_toma();
                $this->load->model('Trabajo_disertacion_model');
                $data['all_trabajos'] = $this->Trabajo_disertacion_model->get_all_trabajo_disertacion_();

                $this->load->view('templates/header');
                $this->load->view('elabora/add', $data);
                $this->load->view('templates/footer');
            }
        } else {
            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');
        }
    }


    /*
     * Editing a elabora
     */
    function edit($est_codigo, $dis_codigo)
    {
        if (isset($_SERVER['HTTP_REFERER'])) {
            // check if the elabora exists before trying to edit it
            $elabora = $this->Elabora_model->get_elabora($est_codigo, $dis_codigo);

            if (isset($elabora['est_codigo']) && isset($elabora['dis_codigo'])) {
                $this->load->library('form_validation');

                $this->form_validation->set_rules('elb_nota_horal', 'Elb Nota Horal|greater_than[0]', 'numeric|greater_than_equal_to[0]');
                $this->form_validation->set_rules('elb_nota_escrito', 'Elb Nota Escrito|greater_than[0]', 'numeric|greater_than_equal_to[0]');

                if (empty($this->input->post('elb_nota_horal'))) {$nota_oral = NULL;} else {$nota_oral =$this->input->post('elb_nota_horal');}
                if (empty($this->input->post('elb_nota_escrito'))) {$nota_escrita = NULL;} else {$nota_escrita=$this->input->post('elb_escrito');}

                if ($this->form_validation->run()) {
                    $params = array(
                        'elb_nota_horal' => $nota_oral,
                        'elb_nota_escrito' => $nota_escrita,
                    );

                    $this->Elabora_model->update_elabora($est_codigo, $dis_codigo, $params);

                    if ($this->session->__get('rol_group') == 'R_PROFESOR') {
                        redirect('profesor/disertacion_estudiantes');
                    } else {
                        redirect('elabora/index');
                    }
                } else {
                    $data['elabora'] = $this->Elabora_model->get_elabora($est_codigo, $dis_codigo);

                    $this->load->model('Estudiante_model');
                    $data['estudiante'] = $this->Estudiante_model->get_estudiante($est_codigo);
                    $this->load->model('Trabajo_disertacion_model');
                    $data['all_trabajos'] = $this->Trabajo_disertacion_model->get_all_trabajo_disertacion_();

                    $this->load->view('templates/header');
                    $this->load->view('elabora/edit', $data);
                    $this->load->view('templates/footer');
                }
            } else
                show_error('The elabora you are trying to edit does not exist.');
        } else {
            $this->load->view('templates/header');
            $this->load->view('templates/forbidden');
            $this->load->view('templates/footer');
        }
    }

    /*
     * Deleting elabora
     */
    function remove($est_codigo, $dis_codigo)
    {
        if (isset($_SERVER['HTTP_REFERER'])) {
            $elabora = $this->Elabora_model->get_elabora($est_codigo, $dis_codigo);

            // check if the elabora exists before trying to delete it
            if (isset($elabora['est_codigo']) && isset($elabora['dis_codigo'])) {
                $this->Elabora_model->delete_elabora($est_codigo, $dis_codigo);
                redirect('elabora/index');
            } else {
                $this->load->view('templates/header');
                $this->load->view('templates/forbidden');
                $this->load->view('templates/footer');
            }
        }

    }
}