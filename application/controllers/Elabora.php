<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Elabora extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Elabora_model');
    } 

    /*
     * Listing of elabora
     */
    function index()
    {
        $data['elabora'] = $this->Elabora_model->get_all_elabora();

        $this->load->view('elabora/index',$data);
    }

    /*
     * Adding a new elabora
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('elb_nota_horal','Elb Nota Horal','numeric');
		$this->form_validation->set_rules('elb_nota_escrito','Elb Nota Escrito','numeric');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'elb_nota_horal' => $this->input->post('elb_nota_horal'),
				'elb_nota_escrito' => $this->input->post('elb_nota_escrito'),
            );
            
            $elabora_id = $this->Elabora_model->add_elabora($params);
            redirect('elabora/index');
        }
        else
        {
            $this->load->view('elabora/add');
        }
    }  

    /*
     * Editing a elabora
     */
    function edit($est_codigo,$dis_codigo)
    {   
        // check if the elabora exists before trying to edit it
        $elabora = $this->Elabora_model->get_elabora($est_codigo,$dis_codigo);
        
        if(isset($elabora['est_codigo'])&&isset($elabora['dis_codigo']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('elb_nota_horal','Elb Nota Horal','numeric');
			$this->form_validation->set_rules('elb_nota_escrito','Elb Nota Escrito','numeric');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'elb_nota_horal' => $this->input->post('elb_nota_horal'),
					'elb_nota_escrito' => $this->input->post('elb_nota_escrito'),
                );

                $this->Elabora_model->update_elabora($est_codigo,$params);            
                redirect('elabora/index');
            }
            else
            {   
                $data['elabora'] = $this->Elabora_model->get_elabora($est_codigo);
    
                $this->load->view('elabora/edit',$data);
            }
        }
        else
            show_error('The elabora you are trying to edit does not exist.');
    } 

    /*
     * Deleting elabora
     */
    function remove($est_codigo,$dis_codigo)
    {
        $elabora = $this->Elabora_model->get_elabora($est_codigo,$dis_codigo);

        // check if the elabora exists before trying to delete it
        if(isset($elabora['est_codigo'])&&isset($elabora['dis_codigo']))
        {
            $this->Elabora_model->delete_elabora($est_codigo,$dis_codigo);
            redirect('elabora/index');
        }
        else
            show_error('The elabora you are trying to delete does not exist.');
    }
    
}
