<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Revision extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Revision_model');
    } 

    /*
     * Listing of revisiones
     */
    function index()
    {
        $data['revisiones'] = $this->Revision_model->get_all_revisiones();

        $this->load->view('revisiones/index',$data);
    }

    /*
     * Adding a new revision
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('dis_codigo','Dis Codigo','required|integer');
		$this->form_validation->set_rules('red_codigo','Red Codigo','integer');
		$this->form_validation->set_rules('obs_fecha','Obs Fecha','required');
		$this->form_validation->set_rules('obs_descripcion','Obs Descripcion','required|max_length[1024]');
		
		if($this->form_validation->run())     
        {
            $this->db->select_max('obs_codigo');
            $result= $this->db->get('revisiones')->row_array();
            $params = array(
                'obs_codigo' =>$result['obs_codigo']+1,
				'dis_codigo' => $this->input->post('dis_codigo'),
				'red_codigo' => $this->input->post('red_codigo'),
				'obs_fecha' => $this->input->post('obs_fecha'),
				'obs_descripcion' => $this->input->post('obs_descripcion'),
            );
            
            $revision_id = $this->Revision_model->add_revision($params);
            redirect('revision/index');
        }
        else
        {

			$this->load->model('Trabajo_disertacion_model');
			$data['all_trabajos_disertacion'] = $this->Trabajo_disertacion_model->get_all_trabajos_disertacion();
                
            $this->load->view('revisiones/add',$data);
        }
    }  

    /*
     * Editing a revision
     */
    function edit($obs_codigo)
    {   
        // check if the revision exists before trying to edit it
        $revision = $this->Revision_model->get_revision($obs_codigo);
        
        if(isset($revision['obs_codigo']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('dis_codigo','Dis Codigo','required|integer');
			$this->form_validation->set_rules('red_codigo','Red Codigo','integer');
			$this->form_validation->set_rules('obs_fecha','Obs Fecha','required');
			$this->form_validation->set_rules('obs_descripcion','Obs Descripcion','required|max_length[1024]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'dis_codigo' => $this->input->post('dis_codigo'),
					'red_codigo' => $this->input->post('red_codigo'),
					'obs_fecha' => $this->input->post('obs_fecha'),
					'obs_descripcion' => $this->input->post('obs_descripcion'),
                );

                $this->Revision_model->update_revision($obs_codigo,$params);            
                redirect('revision/index');
            }
            else
            {   
                $data['revision'] = $this->Revision_model->get_revision($obs_codigo);
    
				$this->load->model('Trabajo_disertacion_model');
				$data['all_trabajos_disertacion'] = $this->Trabajo_disertacion_model->get_all_trabajos_disertacion();

                $this->load->view('revisiones/edit',$data);
            }
        }
        else
            show_error('The revision you are trying to edit does not exist.');
    } 

    /*
     * Deleting revision
     */
    function remove($obs_codigo)
    {
        $revision = $this->Revision_model->get_revision($obs_codigo);

        // check if the revision exists before trying to delete it
        if(isset($revision['obs_codigo']))
        {
            $this->Revision_model->delete_revision($obs_codigo);
            redirect('revision/index');
        }
        else
            show_error('The revision you are trying to delete does not exist.');
    }
    
}
