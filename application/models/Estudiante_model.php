<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */

class Estudiante_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get estudiante by per_codigo
     */
    function get_estudiante($est_codigo)
    {
        return $this->db->get_where('estudiante',array('est_codigo'=>$est_codigo))->row_array();
    }

    /*Get total number of rows (used in pagination)*/
    private $table = "estudiante";
    function count()
    {
        return $this->db->count_all_results($this->table);
    }

    /*
     * Get all estudiante
     */
    function get_all_estudiantes($limit = 5)
    {
        $offset = $this->uri->segment(3);
        return $this->db->limit($limit, $offset)
            ->get('estudiante')->result_array();
    }

    /*
     * Get all estudiante
     */
    function get_all_estudiantes_()
    {
        return $this->db->get('estudiante')->result_array();

    }

    /*
     * function to add new estudiante
     */
    function add_estudiante($params)
    {
        $this->db->insert('estudiante',$params);
        //return $this->db->insert_id();
    }

    /*
     * function to create user estudiante
     */
    function add_user($user,$pass)
    {
        function before ($this, $inthat)
        {
            return substr($inthat, 0, strpos($inthat, $this));
        };
        $user=before ('@', $user);
        $pass="'".$pass."'";

        $this->db->query('CREATE ROLE '.$user.' LOGIN ENCRYPTED PASSWORD '.$pass.'; GRANT "R_ESTUDIANTE" TO '.$user.'');
        //return $this->db->insert_id();
    }

    /*
     * function to update estudiante
     */
    function update_estudiante($est_codigo,$params)
    {
        $this->db->where('est_codigo',$est_codigo);
        $response = $this->db->update('estudiante',$params);
        if($response)
        {
            return "estudiante updated successfully";
        }
        else
        {
            return "Error occuring while updating estudiante";
        }
    }

    /*
     * function to delete estudiante
     */
    function delete_estudiante($est_codigo)
    {
        $response = $this->db->delete('estudiante',array('est_codigo'=>$est_codigo));
        if($response)
        {
            return "estudiante deleted successfully";
        }
        else
        {
            return "Error occuring while deleting estudiante";
        }
    }
}
