<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Dicta_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get dicta by prof_codigo
     */
    function get_dicta()
    {
        $prof_codigo=$this->uri->segment(3);
        $mat_codigo=$this->uri->segment(4);
        return $this->db->get_where('dicta',array('prof_codigo'=>$prof_codigo,'mat_codigo'=>$mat_codigo))->row_array();
    }

    function getDictaBusqueda($param, $limit = 5) {

        // $offset = $this->uri->segment(3);
        // $this->db->limit($limit, $offset);

        $this->db->select('*','mat_nombre',
            'profesor.prof_apellido1',
            'profesor.prof_apellido2',
            'profesor.prof_nombre1',
            'profesor.prof_nombre2');
        $this->db->from('dicta','profesor','materias');
        $this->db->join('materias','materias.mat_codigo=dicta.mat_codigo');
        $this->db->join('profesor','profesor.prof_codigo=dicta.prof_codigo');
        $this->db->like('mat_nombre', $param, 'both');
        $this->db->or_like('prof_apellido1', $param, 'both');

        $query=$this->db->get();
        return $query->result_array();

    }

    function countParamSearch($param)
    {
        $this->db->select('*','mat_nombre',
            'profesor.prof_apellido1',
            'profesor.prof_apellido2',
            'profesor.prof_nombre1',
            'profesor.prof_nombre2');
        $this->db->from('dicta','profesor','materias');
        $this->db->join('materias','materias.mat_codigo=dicta.mat_codigo');
        $this->db->join('profesor','profesor.prof_codigo=dicta.prof_codigo');
        $this->db->like('mat_nombre', $param, 'both');
        $this->db->or_like('prof_apellido1', $param, 'both');

        $query=$this->db->get();

        return $query->num_rows();
    }
    /*
     * Get all dicta
     */

    function get_all_dicta_()
    {
        return $this->db->get('dicta')->result_array();
    }

    function get_all_dicta($limit = 5)
    {
        $offset = $this->uri->segment(3);
        $this->db->limit($limit, $offset);
        //return $this->db->limit($limit, $offset)
         //   ->get('dicta')->result_array();
        $this->db->select('*','mat_nombre',
            'profesor.prof_apellido1',
            'profesor.prof_apellido2',
            'profesor.prof_nombre1',
            'profesor.prof_nombre2');
        $this->db->from('dicta','profesor','materias');
        $this->db->join('materias','materias.mat_codigo=dicta.mat_codigo');
        $this->db->join('profesor','profesor.prof_codigo=dicta.prof_codigo');
        $query=$this->db->get();
        return $query->result_array();
    }
    private $table = "dicta";
    function count()
    {
        return $this->db->count_all_results($this->table);
    }
    /*
     * function to add new dicta
     */
    function add_dicta($params)
    {
        $this->db->insert('dicta',$params);
        //return $this->db->insert_id();
    }
    
    /*
     * function to update dicta
     */
    function update_dicta($prof_codigo,$mat_codigo,$params)
    {
        $this->db->where('prof_codigo',$prof_codigo,'mat_codigo',$mat_codigo);
        $response = $this->db->update('dicta',$params);
        if($response)
        {
            return "dicta updated successfully";
        }
        else
        {
            return "Error occuring while updating dicta";
        }
    }
    
    /*
     * function to delete dicta
     */
    function delete_dicta($prof_codigo,$mat_codigo)
    {
        $response = $this->db->delete('dicta',array('prof_codigo'=>$prof_codigo,'mat_codigo'=>$mat_codigo));
        if($response)
        {
            return "dicta deleted successfully";
        }
        else
        {
            return "Error occuring while deleting dicta";
        }
    }
}
