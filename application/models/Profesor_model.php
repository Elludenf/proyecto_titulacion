<?php
/* 
 * Generated by CRUDigniter v2.3 Beta 
 * www.crudigniter.com
 */
 
class Profesor_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get profesor by per_codigo
     */
    function get_profesor($prof_codigo)
    {
        return $this->db->get_where('profesor',array('prof_codigo'=>$prof_codigo))->row_array();
    }
    private $table = "profesor";
    function count()
    {
        return $this->db->count_all_results($this->table);
    }

    /*
     * Get all profesores
     */
    function get_all_profesores($limit = 5)
    {
        $offset = $this->uri->segment(3);
        return $this->db->limit($limit, $offset)
            ->get('profesor')->result_array();
    }
    
    /*
     * function to add new profesor
     */
    function add_profesor($params)
    {
        $this->db->insert('profesor',$params);
        //return $this->db->insert_id();
    }

    /*
     * function to create user estudiante
     */
    function add_user($user,$pass)
    {
        function before ($this, $inthat)
        {
            return substr($inthat, 0, strpos($inthat, $this));
        };
        $user=before ('@', $user);
        $pass="'".$pass."'";

        $this->db->query('CREATE ROLE '.$user.' LOGIN ENCRYPTED PASSWORD '.$pass.'; GRANT "R_PROFESOR" TO '.$user.'');
        //return $this->db->insert_id();
    }
    
    /*
     * function to update profesor
     */
    function update_profesor($prof_codigo,$params)
    {
        $this->db->where('prof_codigo',$prof_codigo);
        $response = $this->db->update('profesor',$params);
        if($response)
        {
            return "profesor updated successfully";
        }
        else
        {
            return "Error occuring while updating profesor";
        }
    }
    
    /*
     * function to delete profesor
     */
    function delete_profesor($prof_codigo)
    {
        $response = $this->db->delete('profesor',array('prof_codigo'=>$prof_codigo));
        if($response)
        {
            return "profesor deleted successfully";
        }
        else
        {
            return "Error occuring while deleting profesor";
        }
    }
}
